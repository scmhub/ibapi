// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.21.12
// source: NewsArticleRequest.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NewsArticleRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ReqId              *int32                 `protobuf:"varint,1,opt,name=reqId,proto3,oneof" json:"reqId,omitempty"`
	ProviderCode       *string                `protobuf:"bytes,2,opt,name=providerCode,proto3,oneof" json:"providerCode,omitempty"`
	ArticleId          *string                `protobuf:"bytes,3,opt,name=articleId,proto3,oneof" json:"articleId,omitempty"`
	NewsArticleOptions map[string]string      `protobuf:"bytes,4,rep,name=newsArticleOptions,proto3" json:"newsArticleOptions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *NewsArticleRequest) Reset() {
	*x = NewsArticleRequest{}
	mi := &file_NewsArticleRequest_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewsArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsArticleRequest) ProtoMessage() {}

func (x *NewsArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_NewsArticleRequest_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsArticleRequest.ProtoReflect.Descriptor instead.
func (*NewsArticleRequest) Descriptor() ([]byte, []int) {
	return file_NewsArticleRequest_proto_rawDescGZIP(), []int{0}
}

func (x *NewsArticleRequest) GetReqId() int32 {
	if x != nil && x.ReqId != nil {
		return *x.ReqId
	}
	return 0
}

func (x *NewsArticleRequest) GetProviderCode() string {
	if x != nil && x.ProviderCode != nil {
		return *x.ProviderCode
	}
	return ""
}

func (x *NewsArticleRequest) GetArticleId() string {
	if x != nil && x.ArticleId != nil {
		return *x.ArticleId
	}
	return ""
}

func (x *NewsArticleRequest) GetNewsArticleOptions() map[string]string {
	if x != nil {
		return x.NewsArticleOptions
	}
	return nil
}

var File_NewsArticleRequest_proto protoreflect.FileDescriptor

const file_NewsArticleRequest_proto_rawDesc = "" +
	"\n" +
	"\x18NewsArticleRequest.proto\x12\bprotobuf\"\xd1\x02\n" +
	"\x12NewsArticleRequest\x12\x19\n" +
	"\x05reqId\x18\x01 \x01(\x05H\x00R\x05reqId\x88\x01\x01\x12'\n" +
	"\fproviderCode\x18\x02 \x01(\tH\x01R\fproviderCode\x88\x01\x01\x12!\n" +
	"\tarticleId\x18\x03 \x01(\tH\x02R\tarticleId\x88\x01\x01\x12d\n" +
	"\x12newsArticleOptions\x18\x04 \x03(\v24.protobuf.NewsArticleRequest.NewsArticleOptionsEntryR\x12newsArticleOptions\x1aE\n" +
	"\x17NewsArticleOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\b\n" +
	"\x06_reqIdB\x0f\n" +
	"\r_providerCodeB\f\n" +
	"\n" +
	"_articleIdB\fZ\n" +
	".;protobufb\x06proto3"

var (
	file_NewsArticleRequest_proto_rawDescOnce sync.Once
	file_NewsArticleRequest_proto_rawDescData []byte
)

func file_NewsArticleRequest_proto_rawDescGZIP() []byte {
	file_NewsArticleRequest_proto_rawDescOnce.Do(func() {
		file_NewsArticleRequest_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_NewsArticleRequest_proto_rawDesc), len(file_NewsArticleRequest_proto_rawDesc)))
	})
	return file_NewsArticleRequest_proto_rawDescData
}

var file_NewsArticleRequest_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_NewsArticleRequest_proto_goTypes = []any{
	(*NewsArticleRequest)(nil), // 0: protobuf.NewsArticleRequest
	nil,                        // 1: protobuf.NewsArticleRequest.NewsArticleOptionsEntry
}
var file_NewsArticleRequest_proto_depIdxs = []int32{
	1, // 0: protobuf.NewsArticleRequest.newsArticleOptions:type_name -> protobuf.NewsArticleRequest.NewsArticleOptionsEntry
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_NewsArticleRequest_proto_init() }
func file_NewsArticleRequest_proto_init() {
	if File_NewsArticleRequest_proto != nil {
		return
	}
	file_NewsArticleRequest_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_NewsArticleRequest_proto_rawDesc), len(file_NewsArticleRequest_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_NewsArticleRequest_proto_goTypes,
		DependencyIndexes: file_NewsArticleRequest_proto_depIdxs,
		MessageInfos:      file_NewsArticleRequest_proto_msgTypes,
	}.Build()
	File_NewsArticleRequest_proto = out.File
	file_NewsArticleRequest_proto_goTypes = nil
	file_NewsArticleRequest_proto_depIdxs = nil
}
