// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.21.12
// source: TickNews.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TickNews struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReqId         *int32                 `protobuf:"varint,1,opt,name=reqId,proto3,oneof" json:"reqId,omitempty"`
	Timestamp     *int64                 `protobuf:"varint,2,opt,name=timestamp,proto3,oneof" json:"timestamp,omitempty"`
	ProviderCode  *string                `protobuf:"bytes,3,opt,name=providerCode,proto3,oneof" json:"providerCode,omitempty"`
	ArticleId     *string                `protobuf:"bytes,4,opt,name=articleId,proto3,oneof" json:"articleId,omitempty"`
	Headline      *string                `protobuf:"bytes,5,opt,name=headline,proto3,oneof" json:"headline,omitempty"`
	ExtraData     *string                `protobuf:"bytes,6,opt,name=extraData,proto3,oneof" json:"extraData,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TickNews) Reset() {
	*x = TickNews{}
	mi := &file_TickNews_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TickNews) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickNews) ProtoMessage() {}

func (x *TickNews) ProtoReflect() protoreflect.Message {
	mi := &file_TickNews_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickNews.ProtoReflect.Descriptor instead.
func (*TickNews) Descriptor() ([]byte, []int) {
	return file_TickNews_proto_rawDescGZIP(), []int{0}
}

func (x *TickNews) GetReqId() int32 {
	if x != nil && x.ReqId != nil {
		return *x.ReqId
	}
	return 0
}

func (x *TickNews) GetTimestamp() int64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *TickNews) GetProviderCode() string {
	if x != nil && x.ProviderCode != nil {
		return *x.ProviderCode
	}
	return ""
}

func (x *TickNews) GetArticleId() string {
	if x != nil && x.ArticleId != nil {
		return *x.ArticleId
	}
	return ""
}

func (x *TickNews) GetHeadline() string {
	if x != nil && x.Headline != nil {
		return *x.Headline
	}
	return ""
}

func (x *TickNews) GetExtraData() string {
	if x != nil && x.ExtraData != nil {
		return *x.ExtraData
	}
	return ""
}

var File_TickNews_proto protoreflect.FileDescriptor

const file_TickNews_proto_rawDesc = "" +
	"\n" +
	"\x0eTickNews.proto\x12\bprotobuf\"\xaa\x02\n" +
	"\bTickNews\x12\x19\n" +
	"\x05reqId\x18\x01 \x01(\x05H\x00R\x05reqId\x88\x01\x01\x12!\n" +
	"\ttimestamp\x18\x02 \x01(\x03H\x01R\ttimestamp\x88\x01\x01\x12'\n" +
	"\fproviderCode\x18\x03 \x01(\tH\x02R\fproviderCode\x88\x01\x01\x12!\n" +
	"\tarticleId\x18\x04 \x01(\tH\x03R\tarticleId\x88\x01\x01\x12\x1f\n" +
	"\bheadline\x18\x05 \x01(\tH\x04R\bheadline\x88\x01\x01\x12!\n" +
	"\textraData\x18\x06 \x01(\tH\x05R\textraData\x88\x01\x01B\b\n" +
	"\x06_reqIdB\f\n" +
	"\n" +
	"_timestampB\x0f\n" +
	"\r_providerCodeB\f\n" +
	"\n" +
	"_articleIdB\v\n" +
	"\t_headlineB\f\n" +
	"\n" +
	"_extraDataB\fZ\n" +
	".;protobufb\x06proto3"

var (
	file_TickNews_proto_rawDescOnce sync.Once
	file_TickNews_proto_rawDescData []byte
)

func file_TickNews_proto_rawDescGZIP() []byte {
	file_TickNews_proto_rawDescOnce.Do(func() {
		file_TickNews_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_TickNews_proto_rawDesc), len(file_TickNews_proto_rawDesc)))
	})
	return file_TickNews_proto_rawDescData
}

var file_TickNews_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_TickNews_proto_goTypes = []any{
	(*TickNews)(nil), // 0: protobuf.TickNews
}
var file_TickNews_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_TickNews_proto_init() }
func file_TickNews_proto_init() {
	if File_TickNews_proto != nil {
		return
	}
	file_TickNews_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_TickNews_proto_rawDesc), len(file_TickNews_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_TickNews_proto_goTypes,
		DependencyIndexes: file_TickNews_proto_depIdxs,
		MessageInfos:      file_TickNews_proto_msgTypes,
	}.Build()
	File_TickNews_proto = out.File
	file_TickNews_proto_goTypes = nil
	file_TickNews_proto_depIdxs = nil
}
