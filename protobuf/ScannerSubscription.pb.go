// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.21.12
// source: ScannerSubscription.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScannerSubscription struct {
	state                            protoimpl.MessageState `protogen:"open.v1"`
	NumberOfRows                     *int32                 `protobuf:"varint,1,opt,name=numberOfRows,proto3,oneof" json:"numberOfRows,omitempty"`
	Instrument                       *string                `protobuf:"bytes,2,opt,name=instrument,proto3,oneof" json:"instrument,omitempty"`
	LocationCode                     *string                `protobuf:"bytes,3,opt,name=locationCode,proto3,oneof" json:"locationCode,omitempty"`
	ScanCode                         *string                `protobuf:"bytes,4,opt,name=scanCode,proto3,oneof" json:"scanCode,omitempty"`
	AbovePrice                       *float64               `protobuf:"fixed64,5,opt,name=abovePrice,proto3,oneof" json:"abovePrice,omitempty"`
	BelowPrice                       *float64               `protobuf:"fixed64,6,opt,name=belowPrice,proto3,oneof" json:"belowPrice,omitempty"`
	AboveVolume                      *int64                 `protobuf:"varint,7,opt,name=aboveVolume,proto3,oneof" json:"aboveVolume,omitempty"`
	MarketCapAbove                   *float64               `protobuf:"fixed64,8,opt,name=marketCapAbove,proto3,oneof" json:"marketCapAbove,omitempty"`
	MarketCapBelow                   *float64               `protobuf:"fixed64,9,opt,name=marketCapBelow,proto3,oneof" json:"marketCapBelow,omitempty"`
	MoodyRatingAbove                 *string                `protobuf:"bytes,10,opt,name=moodyRatingAbove,proto3,oneof" json:"moodyRatingAbove,omitempty"`
	MoodyRatingBelow                 *string                `protobuf:"bytes,11,opt,name=moodyRatingBelow,proto3,oneof" json:"moodyRatingBelow,omitempty"`
	SpRatingAbove                    *string                `protobuf:"bytes,12,opt,name=spRatingAbove,proto3,oneof" json:"spRatingAbove,omitempty"`
	SpRatingBelow                    *string                `protobuf:"bytes,13,opt,name=spRatingBelow,proto3,oneof" json:"spRatingBelow,omitempty"`
	MaturityDateAbove                *string                `protobuf:"bytes,14,opt,name=maturityDateAbove,proto3,oneof" json:"maturityDateAbove,omitempty"`
	MaturityDateBelow                *string                `protobuf:"bytes,15,opt,name=maturityDateBelow,proto3,oneof" json:"maturityDateBelow,omitempty"`
	CouponRateAbove                  *float64               `protobuf:"fixed64,16,opt,name=couponRateAbove,proto3,oneof" json:"couponRateAbove,omitempty"`
	CouponRateBelow                  *float64               `protobuf:"fixed64,17,opt,name=couponRateBelow,proto3,oneof" json:"couponRateBelow,omitempty"`
	ExcludeConvertible               *bool                  `protobuf:"varint,18,opt,name=excludeConvertible,proto3,oneof" json:"excludeConvertible,omitempty"`
	AverageOptionVolumeAbove         *int64                 `protobuf:"varint,19,opt,name=averageOptionVolumeAbove,proto3,oneof" json:"averageOptionVolumeAbove,omitempty"`
	ScannerSettingPairs              *string                `protobuf:"bytes,20,opt,name=scannerSettingPairs,proto3,oneof" json:"scannerSettingPairs,omitempty"`
	StockTypeFilter                  *string                `protobuf:"bytes,21,opt,name=stockTypeFilter,proto3,oneof" json:"stockTypeFilter,omitempty"`
	ScannerSubscriptionFilterOptions map[string]string      `protobuf:"bytes,22,rep,name=scannerSubscriptionFilterOptions,proto3" json:"scannerSubscriptionFilterOptions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ScannerSubscriptionOptions       map[string]string      `protobuf:"bytes,23,rep,name=scannerSubscriptionOptions,proto3" json:"scannerSubscriptionOptions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *ScannerSubscription) Reset() {
	*x = ScannerSubscription{}
	mi := &file_ScannerSubscription_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScannerSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScannerSubscription) ProtoMessage() {}

func (x *ScannerSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_ScannerSubscription_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScannerSubscription.ProtoReflect.Descriptor instead.
func (*ScannerSubscription) Descriptor() ([]byte, []int) {
	return file_ScannerSubscription_proto_rawDescGZIP(), []int{0}
}

func (x *ScannerSubscription) GetNumberOfRows() int32 {
	if x != nil && x.NumberOfRows != nil {
		return *x.NumberOfRows
	}
	return 0
}

func (x *ScannerSubscription) GetInstrument() string {
	if x != nil && x.Instrument != nil {
		return *x.Instrument
	}
	return ""
}

func (x *ScannerSubscription) GetLocationCode() string {
	if x != nil && x.LocationCode != nil {
		return *x.LocationCode
	}
	return ""
}

func (x *ScannerSubscription) GetScanCode() string {
	if x != nil && x.ScanCode != nil {
		return *x.ScanCode
	}
	return ""
}

func (x *ScannerSubscription) GetAbovePrice() float64 {
	if x != nil && x.AbovePrice != nil {
		return *x.AbovePrice
	}
	return 0
}

func (x *ScannerSubscription) GetBelowPrice() float64 {
	if x != nil && x.BelowPrice != nil {
		return *x.BelowPrice
	}
	return 0
}

func (x *ScannerSubscription) GetAboveVolume() int64 {
	if x != nil && x.AboveVolume != nil {
		return *x.AboveVolume
	}
	return 0
}

func (x *ScannerSubscription) GetMarketCapAbove() float64 {
	if x != nil && x.MarketCapAbove != nil {
		return *x.MarketCapAbove
	}
	return 0
}

func (x *ScannerSubscription) GetMarketCapBelow() float64 {
	if x != nil && x.MarketCapBelow != nil {
		return *x.MarketCapBelow
	}
	return 0
}

func (x *ScannerSubscription) GetMoodyRatingAbove() string {
	if x != nil && x.MoodyRatingAbove != nil {
		return *x.MoodyRatingAbove
	}
	return ""
}

func (x *ScannerSubscription) GetMoodyRatingBelow() string {
	if x != nil && x.MoodyRatingBelow != nil {
		return *x.MoodyRatingBelow
	}
	return ""
}

func (x *ScannerSubscription) GetSpRatingAbove() string {
	if x != nil && x.SpRatingAbove != nil {
		return *x.SpRatingAbove
	}
	return ""
}

func (x *ScannerSubscription) GetSpRatingBelow() string {
	if x != nil && x.SpRatingBelow != nil {
		return *x.SpRatingBelow
	}
	return ""
}

func (x *ScannerSubscription) GetMaturityDateAbove() string {
	if x != nil && x.MaturityDateAbove != nil {
		return *x.MaturityDateAbove
	}
	return ""
}

func (x *ScannerSubscription) GetMaturityDateBelow() string {
	if x != nil && x.MaturityDateBelow != nil {
		return *x.MaturityDateBelow
	}
	return ""
}

func (x *ScannerSubscription) GetCouponRateAbove() float64 {
	if x != nil && x.CouponRateAbove != nil {
		return *x.CouponRateAbove
	}
	return 0
}

func (x *ScannerSubscription) GetCouponRateBelow() float64 {
	if x != nil && x.CouponRateBelow != nil {
		return *x.CouponRateBelow
	}
	return 0
}

func (x *ScannerSubscription) GetExcludeConvertible() bool {
	if x != nil && x.ExcludeConvertible != nil {
		return *x.ExcludeConvertible
	}
	return false
}

func (x *ScannerSubscription) GetAverageOptionVolumeAbove() int64 {
	if x != nil && x.AverageOptionVolumeAbove != nil {
		return *x.AverageOptionVolumeAbove
	}
	return 0
}

func (x *ScannerSubscription) GetScannerSettingPairs() string {
	if x != nil && x.ScannerSettingPairs != nil {
		return *x.ScannerSettingPairs
	}
	return ""
}

func (x *ScannerSubscription) GetStockTypeFilter() string {
	if x != nil && x.StockTypeFilter != nil {
		return *x.StockTypeFilter
	}
	return ""
}

func (x *ScannerSubscription) GetScannerSubscriptionFilterOptions() map[string]string {
	if x != nil {
		return x.ScannerSubscriptionFilterOptions
	}
	return nil
}

func (x *ScannerSubscription) GetScannerSubscriptionOptions() map[string]string {
	if x != nil {
		return x.ScannerSubscriptionOptions
	}
	return nil
}

var File_ScannerSubscription_proto protoreflect.FileDescriptor

const file_ScannerSubscription_proto_rawDesc = "" +
	"\n" +
	"\x19ScannerSubscription.proto\x12\bprotobuf\"\x99\x0e\n" +
	"\x13ScannerSubscription\x12'\n" +
	"\fnumberOfRows\x18\x01 \x01(\x05H\x00R\fnumberOfRows\x88\x01\x01\x12#\n" +
	"\n" +
	"instrument\x18\x02 \x01(\tH\x01R\n" +
	"instrument\x88\x01\x01\x12'\n" +
	"\flocationCode\x18\x03 \x01(\tH\x02R\flocationCode\x88\x01\x01\x12\x1f\n" +
	"\bscanCode\x18\x04 \x01(\tH\x03R\bscanCode\x88\x01\x01\x12#\n" +
	"\n" +
	"abovePrice\x18\x05 \x01(\x01H\x04R\n" +
	"abovePrice\x88\x01\x01\x12#\n" +
	"\n" +
	"belowPrice\x18\x06 \x01(\x01H\x05R\n" +
	"belowPrice\x88\x01\x01\x12%\n" +
	"\vaboveVolume\x18\a \x01(\x03H\x06R\vaboveVolume\x88\x01\x01\x12+\n" +
	"\x0emarketCapAbove\x18\b \x01(\x01H\aR\x0emarketCapAbove\x88\x01\x01\x12+\n" +
	"\x0emarketCapBelow\x18\t \x01(\x01H\bR\x0emarketCapBelow\x88\x01\x01\x12/\n" +
	"\x10moodyRatingAbove\x18\n" +
	" \x01(\tH\tR\x10moodyRatingAbove\x88\x01\x01\x12/\n" +
	"\x10moodyRatingBelow\x18\v \x01(\tH\n" +
	"R\x10moodyRatingBelow\x88\x01\x01\x12)\n" +
	"\rspRatingAbove\x18\f \x01(\tH\vR\rspRatingAbove\x88\x01\x01\x12)\n" +
	"\rspRatingBelow\x18\r \x01(\tH\fR\rspRatingBelow\x88\x01\x01\x121\n" +
	"\x11maturityDateAbove\x18\x0e \x01(\tH\rR\x11maturityDateAbove\x88\x01\x01\x121\n" +
	"\x11maturityDateBelow\x18\x0f \x01(\tH\x0eR\x11maturityDateBelow\x88\x01\x01\x12-\n" +
	"\x0fcouponRateAbove\x18\x10 \x01(\x01H\x0fR\x0fcouponRateAbove\x88\x01\x01\x12-\n" +
	"\x0fcouponRateBelow\x18\x11 \x01(\x01H\x10R\x0fcouponRateBelow\x88\x01\x01\x123\n" +
	"\x12excludeConvertible\x18\x12 \x01(\bH\x11R\x12excludeConvertible\x88\x01\x01\x12?\n" +
	"\x18averageOptionVolumeAbove\x18\x13 \x01(\x03H\x12R\x18averageOptionVolumeAbove\x88\x01\x01\x125\n" +
	"\x13scannerSettingPairs\x18\x14 \x01(\tH\x13R\x13scannerSettingPairs\x88\x01\x01\x12-\n" +
	"\x0fstockTypeFilter\x18\x15 \x01(\tH\x14R\x0fstockTypeFilter\x88\x01\x01\x12\x8f\x01\n" +
	" scannerSubscriptionFilterOptions\x18\x16 \x03(\v2C.protobuf.ScannerSubscription.ScannerSubscriptionFilterOptionsEntryR scannerSubscriptionFilterOptions\x12}\n" +
	"\x1ascannerSubscriptionOptions\x18\x17 \x03(\v2=.protobuf.ScannerSubscription.ScannerSubscriptionOptionsEntryR\x1ascannerSubscriptionOptions\x1aS\n" +
	"%ScannerSubscriptionFilterOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aM\n" +
	"\x1fScannerSubscriptionOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x0f\n" +
	"\r_numberOfRowsB\r\n" +
	"\v_instrumentB\x0f\n" +
	"\r_locationCodeB\v\n" +
	"\t_scanCodeB\r\n" +
	"\v_abovePriceB\r\n" +
	"\v_belowPriceB\x0e\n" +
	"\f_aboveVolumeB\x11\n" +
	"\x0f_marketCapAboveB\x11\n" +
	"\x0f_marketCapBelowB\x13\n" +
	"\x11_moodyRatingAboveB\x13\n" +
	"\x11_moodyRatingBelowB\x10\n" +
	"\x0e_spRatingAboveB\x10\n" +
	"\x0e_spRatingBelowB\x14\n" +
	"\x12_maturityDateAboveB\x14\n" +
	"\x12_maturityDateBelowB\x12\n" +
	"\x10_couponRateAboveB\x12\n" +
	"\x10_couponRateBelowB\x15\n" +
	"\x13_excludeConvertibleB\x1b\n" +
	"\x19_averageOptionVolumeAboveB\x16\n" +
	"\x14_scannerSettingPairsB\x12\n" +
	"\x10_stockTypeFilterB\fZ\n" +
	".;protobufb\x06proto3"

var (
	file_ScannerSubscription_proto_rawDescOnce sync.Once
	file_ScannerSubscription_proto_rawDescData []byte
)

func file_ScannerSubscription_proto_rawDescGZIP() []byte {
	file_ScannerSubscription_proto_rawDescOnce.Do(func() {
		file_ScannerSubscription_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ScannerSubscription_proto_rawDesc), len(file_ScannerSubscription_proto_rawDesc)))
	})
	return file_ScannerSubscription_proto_rawDescData
}

var file_ScannerSubscription_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_ScannerSubscription_proto_goTypes = []any{
	(*ScannerSubscription)(nil), // 0: protobuf.ScannerSubscription
	nil,                         // 1: protobuf.ScannerSubscription.ScannerSubscriptionFilterOptionsEntry
	nil,                         // 2: protobuf.ScannerSubscription.ScannerSubscriptionOptionsEntry
}
var file_ScannerSubscription_proto_depIdxs = []int32{
	1, // 0: protobuf.ScannerSubscription.scannerSubscriptionFilterOptions:type_name -> protobuf.ScannerSubscription.ScannerSubscriptionFilterOptionsEntry
	2, // 1: protobuf.ScannerSubscription.scannerSubscriptionOptions:type_name -> protobuf.ScannerSubscription.ScannerSubscriptionOptionsEntry
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_ScannerSubscription_proto_init() }
func file_ScannerSubscription_proto_init() {
	if File_ScannerSubscription_proto != nil {
		return
	}
	file_ScannerSubscription_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ScannerSubscription_proto_rawDesc), len(file_ScannerSubscription_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ScannerSubscription_proto_goTypes,
		DependencyIndexes: file_ScannerSubscription_proto_depIdxs,
		MessageInfos:      file_ScannerSubscription_proto_msgTypes,
	}.Build()
	File_ScannerSubscription_proto = out.File
	file_ScannerSubscription_proto_goTypes = nil
	file_ScannerSubscription_proto_depIdxs = nil
}
