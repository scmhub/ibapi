// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.21.12
// source: HistoricalSchedule.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HistoricalSchedule struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ReqId              *int32                 `protobuf:"varint,1,opt,name=reqId,proto3,oneof" json:"reqId,omitempty"`
	StartDateTime      *string                `protobuf:"bytes,2,opt,name=startDateTime,proto3,oneof" json:"startDateTime,omitempty"`
	EndDateTime        *string                `protobuf:"bytes,3,opt,name=endDateTime,proto3,oneof" json:"endDateTime,omitempty"`
	TimeZone           *string                `protobuf:"bytes,4,opt,name=timeZone,proto3,oneof" json:"timeZone,omitempty"`
	HistoricalSessions []*HistoricalSession   `protobuf:"bytes,5,rep,name=historicalSessions,proto3" json:"historicalSessions,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *HistoricalSchedule) Reset() {
	*x = HistoricalSchedule{}
	mi := &file_HistoricalSchedule_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoricalSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoricalSchedule) ProtoMessage() {}

func (x *HistoricalSchedule) ProtoReflect() protoreflect.Message {
	mi := &file_HistoricalSchedule_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoricalSchedule.ProtoReflect.Descriptor instead.
func (*HistoricalSchedule) Descriptor() ([]byte, []int) {
	return file_HistoricalSchedule_proto_rawDescGZIP(), []int{0}
}

func (x *HistoricalSchedule) GetReqId() int32 {
	if x != nil && x.ReqId != nil {
		return *x.ReqId
	}
	return 0
}

func (x *HistoricalSchedule) GetStartDateTime() string {
	if x != nil && x.StartDateTime != nil {
		return *x.StartDateTime
	}
	return ""
}

func (x *HistoricalSchedule) GetEndDateTime() string {
	if x != nil && x.EndDateTime != nil {
		return *x.EndDateTime
	}
	return ""
}

func (x *HistoricalSchedule) GetTimeZone() string {
	if x != nil && x.TimeZone != nil {
		return *x.TimeZone
	}
	return ""
}

func (x *HistoricalSchedule) GetHistoricalSessions() []*HistoricalSession {
	if x != nil {
		return x.HistoricalSessions
	}
	return nil
}

var File_HistoricalSchedule_proto protoreflect.FileDescriptor

const file_HistoricalSchedule_proto_rawDesc = "" +
	"\n" +
	"\x18HistoricalSchedule.proto\x12\bprotobuf\x1a\x17HistoricalSession.proto\"\xa8\x02\n" +
	"\x12HistoricalSchedule\x12\x19\n" +
	"\x05reqId\x18\x01 \x01(\x05H\x00R\x05reqId\x88\x01\x01\x12)\n" +
	"\rstartDateTime\x18\x02 \x01(\tH\x01R\rstartDateTime\x88\x01\x01\x12%\n" +
	"\vendDateTime\x18\x03 \x01(\tH\x02R\vendDateTime\x88\x01\x01\x12\x1f\n" +
	"\btimeZone\x18\x04 \x01(\tH\x03R\btimeZone\x88\x01\x01\x12K\n" +
	"\x12historicalSessions\x18\x05 \x03(\v2\x1b.protobuf.HistoricalSessionR\x12historicalSessionsB\b\n" +
	"\x06_reqIdB\x10\n" +
	"\x0e_startDateTimeB\x0e\n" +
	"\f_endDateTimeB\v\n" +
	"\t_timeZoneB\fZ\n" +
	".;protobufb\x06proto3"

var (
	file_HistoricalSchedule_proto_rawDescOnce sync.Once
	file_HistoricalSchedule_proto_rawDescData []byte
)

func file_HistoricalSchedule_proto_rawDescGZIP() []byte {
	file_HistoricalSchedule_proto_rawDescOnce.Do(func() {
		file_HistoricalSchedule_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_HistoricalSchedule_proto_rawDesc), len(file_HistoricalSchedule_proto_rawDesc)))
	})
	return file_HistoricalSchedule_proto_rawDescData
}

var file_HistoricalSchedule_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_HistoricalSchedule_proto_goTypes = []any{
	(*HistoricalSchedule)(nil), // 0: protobuf.HistoricalSchedule
	(*HistoricalSession)(nil),  // 1: protobuf.HistoricalSession
}
var file_HistoricalSchedule_proto_depIdxs = []int32{
	1, // 0: protobuf.HistoricalSchedule.historicalSessions:type_name -> protobuf.HistoricalSession
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_HistoricalSchedule_proto_init() }
func file_HistoricalSchedule_proto_init() {
	if File_HistoricalSchedule_proto != nil {
		return
	}
	file_HistoricalSession_proto_init()
	file_HistoricalSchedule_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_HistoricalSchedule_proto_rawDesc), len(file_HistoricalSchedule_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_HistoricalSchedule_proto_goTypes,
		DependencyIndexes: file_HistoricalSchedule_proto_depIdxs,
		MessageInfos:      file_HistoricalSchedule_proto_msgTypes,
	}.Build()
	File_HistoricalSchedule_proto = out.File
	file_HistoricalSchedule_proto_goTypes = nil
	file_HistoricalSchedule_proto_depIdxs = nil
}
